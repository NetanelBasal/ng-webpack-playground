#!/usr/bin/env node
const fs=require("fs"),promptDirectory=require("inquirer-directory"),inquirer=require("inquirer"),{buildKeys:buildKeys,getScopesMap:getScopesMap,readFile:readFile}=require("./keysBuilder"),{getLogger:getLogger}=require("./helpers"),[localLang]=require("os-locale").sync().split("-"),messages=require("./messages").getMessages(localLang),glob=require("glob"),chalk=require("chalk"),{regexs:regexs}=require("./regexs"),{DeepDiff:DeepDiff}=require("deep-diff"),{applyChange:applyChange}=require("deep-diff"),Table=require("cli-table");inquirer.registerPrompt("directory",promptDirectory);const queries=e=>[{type:"directory",name:"src",message:messages.src,basePath:e},{type:"directory",name:"i18n",message:messages.translationsLocation,basePath:e},{type:"confirm",default:!1,name:"hasScope",message:messages.hasScope},{type:"file-tree-selection",name:"configPath",messages:messages.config},{type:"confirm",default:!0,name:"addMissing",message:messages.addMissing},{type:"input",name:"defaultValue",default:'""',message:messages.defaultValue,when:({addMissing:e})=>e}],defaultConfig={src:"src",i18n:"assets/i18n",addMissing:!0,defaultValue:""};let logger,_prodMode=!1;function verifyTranslationsDir(e){const s=`${process.cwd()}/${e}`,i=fs.existsSync(s),r=i&&glob.sync(`${s}/**/*.json`);return i&&0!==r.length?r:(console.log(s),console.log(chalk.bgRed.black(`Transloco Keys Manager: ${i?messages.noTranslationFilesFound(s):messages.pathDoesntExists}`)))}function compareKeysToFiles({keys:e,i18nPath:s,addMissing:i,prodMode:r,translationFiles:a}){(logger=getLogger(_prodMode=_prodMode||r)).startSpinner(`${messages.checkMissing} ✨`);const n={},o=a||verifyTranslationsDir(s);if(!o)return;for(const r of o){const{scope:a,fileLang:o}=regexs.fileLang(s).exec(r).groups,t=a?e[a.slice(0,-1)]:e.__global;if(!t)continue;const g=readFile(r),l=JSON.parse(g),c=DeepDiff(l,t);if(c){const e=`${a||""}${o}`;n[e]={missing:[],extra:[]};for(const s of c)"N"===s.kind?(n[e].missing.push(s),i&&applyChange(l,t,s)):_prodMode||"D"!==s.kind||n[e].extra.push(s);if(i){const e=JSON.stringify(l,null,2);fs.writeFileSync(r,e,"utf8")}}}if(_prodMode)return;logger.succeed(`${messages.checkMissing} ✨`);const t=Object.keys(n).filter(e=>{const{missing:s,extra:i}=n[e];return s.length||i.length});if(t.length>0){logger.log(),logger.succeed(`🏁 [4m${messages.summary}[0m 🏁`);const e=new Table({head:["File Name","Missing Keys","Extra Keys"].map(e=>chalk.cyan(e)),colWidths:[40,40,30]});for(let s=0;s<t.length;s++){const i=[],{missing:r,extra:a}=n[t[s]],o=r.length>0,g=a.length>0;(g||o)&&(i.push(`${t[s]}`),o?i.push(r.map(e=>`'${e.path.join(".")}'`).join(", ")):i.push("--"),g>0?i.push(a.map(e=>e.path?`'${e.path.join(".")}'`:Object.keys(e.lhs).map(e=>`'${e}'`)).join(", ")):i.push("--"),e.push(i))}logger.log(e.toString()),i&&logger.succeed("Added all missing keys to files 📜\n")}else logger.log(`\n🎉 ${messages.noMissing} 🎉\n`)}function initProcessParams(e,s){const i=e.src||s.src||defaultConfig.src,r=getScopesMap(e.configPath||s.configPath),a=e.i18n||s.i18n||defaultConfig.i18n;let n=e.addMissing;return void 0===n&&(n=s.addMissing),void 0===n&&(n=defaultConfig.addMissing),{src:i,i18nPath:a,defaultValue:e.defaultValue||s.defaultValue||defaultConfig.defaultValue,addMissing:n,scopes:r}}function findMissingKeys({config:e,basePath:s}){return _prodMode=e.prodMode,logger=getLogger(_prodMode),inquirer.prompt(e.interactive?queries(s):[]).then(s=>{const{src:i,i18nPath:r,defaultValue:a,addMissing:n,scopes:o}=initProcessParams(s,e),t=verifyTranslationsDir(r);if(!t)return;logger.log("\n 🕵 🔎",`[4m${messages.startSearch}[0m`,"🔍 🕵\n"),logger.startSpinner(`${messages.extract} `);const g={src:i,scopes:o,defaultValue:a,file:e.file};return buildKeys(g).then(({keys:e})=>{logger.succeed(`${messages.extract} 🗝`),compareKeysToFiles({keys:e,i18nPath:`${process.cwd()}/${r}`,addMissing:n,translationFiles:t})})}).catch(e=>logger.log(e))}module.exports={findMissingKeys:findMissingKeys,compareKeysToFiles:compareKeysToFiles};
